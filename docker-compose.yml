version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 10

  kafka-init:
    image: confluentinc/cp-kafka:latest
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c"]
    command: >
      echo 'Aguardando Kafka subir...';
      sleep 15;
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic cotacoes --partitions 1 --replication-factor 1;
      echo 'Tópico cotacoes criado (ou já existia)';
    environment:
      KAFKA_HEAP_OPTS: "-Xmx256M -Xms128M"
    restart: "no"

  mysql:
    image: mysql:8
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: investimentos_db
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p1234"]
      interval: 10s
      timeout: 5s
      retries: 5

  investimentos-producer:
    build:
      context: .
      dockerfile: Investimentos.Producer/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
      mysql:
        condition: service_healthy
    restart: on-failure
    entrypoint: ["sh", "-c", "chmod +x /wait-for-it.sh && /wait-for-it.sh kafka:9092 -- true && /wait-for-it.sh mysql:3306 -- true && dotnet Investimentos.Producer.dll"]
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh
    environment:
      DOTNET_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: server=mysql;port=3306;user=root;password=1234;database=investimentos_db

  investimentos-api:
    build:
      context: .
      dockerfile: Investimentos.Api/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
      mysql:
        condition: service_healthy
    restart: on-failure
    ports:
      - "5030:80"
    entrypoint: ["sh", "-c", "chmod +x /wait-for-it.sh && /wait-for-it.sh kafka:9092 -- dotnet Investimentos.Api.dll"]
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: server=mysql;port=3306;user=root;password=1234;database=investimentos_db

  investimentos-web:
    build:
      context: .
      dockerfile: Investimentos.Web/Dockerfile
    depends_on:
      investimentos-api:
        condition: service_started
    ports:
      - "5040:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      API_URL: http://investimentos-api


volumes:
  mysql_data:
